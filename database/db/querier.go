// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0

package db

import (
	"context"
)

type Querier interface {
	// Insert a new member into the database
	CreateMember(ctx context.Context, arg CreateMemberParams) (int32, error)
	// Insert a new member's credentials into the database
	CreateMemberCredentials(ctx context.Context, arg CreateMemberCredentialsParams) error
	// Insert a new project into the database
	CreateProject(ctx context.Context, arg CreateProjectParams) (int32, error)
	// Assign a member to a project
	CreateProjectMember(ctx context.Context, arg CreateProjectMemberParams) error
	// Insert a new Task into the database
	CreateTask(ctx context.Context, arg CreateTaskParams) (int32, error)
	// Insert a new Task Group into the database
	CreateTaskGroup(ctx context.Context, arg CreateTaskGroupParams) (int32, error)
	// Insert a new member into a Task Group
	CreateTaskGroupMember(ctx context.Context, arg CreateTaskGroupMemberParams) error
	// Insert a new member into a Task
	CreateTaskMember(ctx context.Context, arg CreateTaskMemberParams) error
	// Delete a member from the database
	DeleteMemberByID(ctx context.Context, memberID int32) error
	// Delete a member's credentials from the database
	DeleteMemberCredentialsByID(ctx context.Context, memberID int32) error
	// Delete a project from the database
	DeleteProjectByID(ctx context.Context, projectID int32) error
	// Remove a member from a project
	DeleteProjectMemberByID(ctx context.Context, arg DeleteProjectMemberByIDParams) error
	// Delete a Task from the database
	DeleteTaskByID(ctx context.Context, taskID int32) error
	// Delete a Task Group from the database
	DeleteTaskGroupByID(ctx context.Context, taskGroupID int32) error
	// Remove a member from a Task Group
	DeleteTaskGroupMemberByID(ctx context.Context, arg DeleteTaskGroupMemberByIDParams) error
	// Remove a member from a Task
	DeleteTaskMemberByID(ctx context.Context, arg DeleteTaskMemberByIDParams) error
	// Get all member IDs from the database
	GetAllMemberIDs(ctx context.Context) ([]int32, error)
	// Get all members from the database
	GetAllMembers(ctx context.Context) ([]Member, error)
	// Get all project IDs from the database
	GetAllProjectIDs(ctx context.Context) ([]int32, error)
	// Get all member IDs assigned to a project
	GetAllProjectMemberIDs(ctx context.Context, projectID int32) ([]int32, error)
	// Get all members assigned to a project
	GetAllProjectMembers(ctx context.Context, projectID int32) ([]ProjectMember, error)
	// Get all projects from the database
	GetAllProjects(ctx context.Context) ([]Project, error)
	// Get all Task Group IDs for a project
	GetAllTaskGroupIDs(ctx context.Context, projectID int32) ([]int32, error)
	// Get all member IDs assigned to a Task Group
	GetAllTaskGroupMemberIDs(ctx context.Context, taskGroupID int32) ([]int32, error)
	// Get all members assigned to a Task Group
	GetAllTaskGroupMembers(ctx context.Context, taskGroupID int32) ([]TaskGroupMember, error)
	// Get all Task Groups for a project
	GetAllTaskGroups(ctx context.Context, projectID int32) ([]TaskGroup, error)
	// Get all Task IDs for a Task Group
	GetAllTaskIDs(ctx context.Context, taskGroupID int32) ([]int32, error)
	// Get all member IDs assigned to a Task
	GetAllTaskMemberIDs(ctx context.Context, taskID int32) ([]int32, error)
	// Get all members assigned to a Task
	GetAllTaskMembers(ctx context.Context, taskID int32) ([]TaskMember, error)
	// Get all Tasks for a Task Group
	GetAllTasks(ctx context.Context, taskGroupID int32) ([]Task, error)
	// Get a member by their ID
	GetMemberByID(ctx context.Context, memberID int32) (Member, error)
	// Get a member's credentials by their ID
	GetMemberCredentialsByID(ctx context.Context, memberID int32) (MemberCredentials, error)
	// Get a project by its ID
	GetProjectByID(ctx context.Context, projectID int32) (Project, error)
	// Get a project's member by their ID
	GetProjectMemberByID(ctx context.Context, arg GetProjectMemberByIDParams) (ProjectMember, error)
	// Get a Task by its ID
	GetTaskByID(ctx context.Context, taskID int32) (Task, error)
	// Get a Task Group by its ID
	GetTaskGroupByID(ctx context.Context, taskGroupID int32) (TaskGroup, error)
	// Get a member's Task Group by their ID
	GetTaskGroupMemberByID(ctx context.Context, arg GetTaskGroupMemberByIDParams) (TaskGroupMember, error)
	// Get a member's Task by their ID
	GetTaskMemberByID(ctx context.Context, arg GetTaskMemberByIDParams) (TaskMember, error)
	// Update a member's information
	UpdateMemberByID(ctx context.Context, arg UpdateMemberByIDParams) error
	// Update a member's credentials
	UpdateMemberCredentialsByID(ctx context.Context, arg UpdateMemberCredentialsByIDParams) error
	// Update a project's information
	UpdateProjectByID(ctx context.Context, arg UpdateProjectByIDParams) error
	// Update a project's member information
	UpdateProjectMemberByID(ctx context.Context, arg UpdateProjectMemberByIDParams) error
	// Update a Task's information
	UpdateTaskByID(ctx context.Context, arg UpdateTaskByIDParams) error
	// Update a Task Group's information
	UpdateTaskGroupByID(ctx context.Context, arg UpdateTaskGroupByIDParams) error
	// Update a member's Task Group information
	UpdateTaskGroupMemberByID(ctx context.Context, arg UpdateTaskGroupMemberByIDParams) error
	// Update a member's Task information
	UpdateTaskMemberByID(ctx context.Context, arg UpdateTaskMemberByIDParams) error
}

var _ Querier = (*Queries)(nil)

openapi: 3.0.2
info:
  title: TaskTracker API
  description: API for TaskTracker, a project management and task tracking system.
  version: 0.1.0
servers:
  - url: http://localhost:8080/api
paths:
  /users:
    get:
      summary: Get all users
      tags:
        - Users
      operationId: getUsers
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      tags:
        - Users
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
      responses:
        '201':
          description: The newly created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
                
  /users/{userId}:
    get:
      summary: Get a user by ID
      tags:
        - Users
      operationId: getUserById
      parameters:
        - name: userId
          in: path
          required: true
          description: ID of the user to get
          schema:
            type: integer
      responses:
        '200':
          description: The user with the specified ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found

  /projects:
    get:
      summary: Get all projects
      tags:
        - Projects
      operationId: getProjects
      responses:
        '200':
          description: A list of projects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
    post:
      summary: Create a new project
      tags:
        - Projects
      operationId: createProject
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewProject'
      responses:
        '201':
          description: The newly created project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'

  /projects/{projectId}:
    get:
      summary: Get a project by ID
      tags:
        - Projects
      operationId: getProjectById
      parameters:
        - name: projectId
          in: path
          required: true
          description: ID of the project to get
          schema:
            type: integer
      responses:
        '200':
          description: The project with the specified ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '404':
          description: Project not found

  /projects/{projectId}/taskgroups:
    get:
      summary: Get all task groups for a project
      tags:
        - Task Groups
      operationId: getTaskGroupsForProject
      parameters:
        - name: projectId
          in: path
          required: true
          description: ID of the project to get task groups for
          schema:
            type: integer
      responses:
        '200':
          description: A list of task groups for the project
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskGroup'
        '404':
          description: Project not found

    post:
      summary: Create a new task group for a project
      tags:
        - Task Groups
      operationId: createTaskGroupForProject
      parameters:
        - name: projectId
          in: path
          required: true
          description: ID of the project to create a task group for
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTaskGroup'
      responses:
        '201':
          description: The newly created task group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskGroup'

  /taskgroups/{taskGroupId}:
    get:
      summary: Get a task group by ID
      tags:
        - Task Groups
      operationId: getTaskGroupById
      parameters:
        - name: taskGroupId
          in: path
          required: true
          description: ID of the task group to get
          schema:
            type: integer
      responses:
        '200':
          description: The task group with the specified ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskGroup'
        '404':
          description: Task group not found

  /taskgroups/{taskGroupId}/tasks:
    get:
      summary: Get all tasks for a task group
      tags:
        - Tasks
      operationId: getTasksForTaskGroup
      parameters:
        - name: taskGroupId
          in: path
          required: true
          description: ID of the task group to get tasks for
          schema:
            type: integer
      responses:
        '200':
          description: A list of tasks for the task group
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '404':
          description: Task group not found

    post:
      summary: Create a new task for a task group
      tags:
        - Tasks
      operationId: createTaskForTaskGroup
      parameters:
        - name: taskGroupId
          in: path
          required: true
          description: ID of the task group to create a task for
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTask'
      responses:
        '201':
          description: The newly created task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'

  /tasks/{taskId}:
    get:
      summary: Get a task by ID
      tags:
        - Tasks
      operationId: getTaskById
      parameters:
        - name: taskId
          in: path
          required: true
          description: ID of the task to get
          schema:
            type: integer
      responses:
        '200':
          description: The task with the specified ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found

  /users/{userId}/projects:
    get:
      summary: Get all projects for a user
      tags:
        - Users
      operationId: getProjectsForUser
      parameters:
        - name: userId
          in: path
          required: true
          description: ID of the user to get projects for
          schema:
            type: integer
      responses:
        '200':
          description: A list of projects for the user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
        '404':
          description: User not found

    post:
      summary: Add a user to a project
      tags:
        - Users
      operationId: addUserToProject
      parameters:
        - name: userId
          in: path
          required: true
          description: ID of the user to add to the project
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUserProject'
      responses:
        '201':
          description: The newly created user project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userProjects'

components:
  schemas:
    User:
      type: object
      properties:
        userId:
          type: integer
        email:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        lastLogin:
          type: string
          format: date-time
      required:
        - userId
        - email
        - firstName
        - lastName
        - createdAt
        - updatedAt
        - lastLogin

    NewUser:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
        firstName:
          type: string
        lastName:
          type: string
      required:
        - email
        - password
        - firstName
        - lastName

    Project:
      type: object
      properties:
        projectId:
          type: integer
        name:
          type: string
        description:
          type: string
        ownerId:
          type: integer
        status:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - projectId
        - name
        - ownerId
        - status
        - createdAt
        - updatedAt

    NewProject:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        ownerId:
          type: integer
        status:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
      required:
        - name
        - ownerId
        - status

    TaskGroup:
      type: object
      properties:
        taskGroupId:
          type: integer
        projectId:
          type: integer
        name:
          type: string
        description:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - taskGroupId
        - projectId
        - name
        - createdAt
        - updatedAt

    NewTaskGroup:
      type: object
      properties:
        projectId:
          type: integer
        name:
          type: string
        description:
          type: string
      required:
        - projectId
        - name

    Task:
      type: object
      properties:
        taskId:
          type: integer
        taskGroupId:
          type: integer
        title:
          type: string
        description:
          type: string
        assigneeId:
          type: integer
        status:
          type: string
        priority:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - taskId
        - taskGroupId
        - title
        - assigneeId
        - status
        - priority
        - createdAt
        - updatedAt

    NewTask:
      type: object
      properties:
        taskGroupId:
          type: integer
        title:
          type: string
        description:
          type: string
        assigneeId:
          type: integer
        status:
          type: string
        priority:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
      required:
        - taskGroupId
        - title
        - assigneeId
        - status
        - priority
        
    userProjects:
      type: object
      properties:
        userId:
          type: integer
        projectId:
          type: integer
        role:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - userId
        - projectId
        - role
        - createdAt
        - updatedAt

    NewUserProject:
      type: object
      properties:
        userId:
          type: integer
        projectId:
          type: integer
        role:
          type: string
      required:
        - userId
        - projectId
        - role
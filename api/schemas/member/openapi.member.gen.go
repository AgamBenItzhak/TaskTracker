// Package member provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package member

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"
	"time"

	externalRef0 "github.com/AgamBenItzhak/TaskTracker/api/schemas/auth"
	"github.com/getkin/kin-openapi/openapi3"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

// FullMember defines model for full_member.
type FullMember struct {
	CreatedAt time.Time           `json:"created_at" mapstructure:"created_at"`
	Email     openapi_types.Email `json:"email" mapstructure:"email"`
	FirstName string              `json:"first_name" mapstructure:"first_name"`
	LastName  string              `json:"last_name" mapstructure:"last_name"`
	MemberId  int64               `json:"member_id" mapstructure:"member_id"`
	UpdatedAt time.Time           `json:"updated_at" mapstructure:"updated_at"`
}

// FullMemberRequest defines model for full_member_request.
type FullMemberRequest struct {
	MemberId int64 `json:"member_id" mapstructure:"member_id"`
}

// FullMemberResponse defines model for full_member_response.
type FullMemberResponse struct {
	FullMember FullMember `json:"full_member"`
}

// FullMembersRequest defines model for full_members_request.
type FullMembersRequest struct {
	MemberIds []int64 `json:"member_ids" mapstructure:"member_ids"`
}

// FullMembersResponse defines model for full_members_response.
type FullMembersResponse struct {
	FullMembers []FullMember `json:"full_members" mapstructure:"full_members"`
}

// LoginRequest defines model for login_request.
type LoginRequest struct {
	MemberId int64  `json:"member_id" mapstructure:"member_id"`
	Password string `json:"password" mapstructure:"password"`
}

// LoginResponse defines model for login_response.
type LoginResponse struct {
	RefreshToken externalRef0.Token `json:"refresh_token"`
	Token        externalRef0.Token `json:"token"`
}

// LogoutRequest defines model for logout_request.
type LogoutRequest struct {
	MemberId int64 `json:"member_id" mapstructure:"member_id"`
}

// LogoutResponse defines model for logout_response.
type LogoutResponse struct {
	MemberId int64 `json:"member_id" mapstructure:"member_id"`
}

// Member defines model for member.
type Member struct {
	CreatedAt time.Time           `json:"created_at" mapstructure:"created_at"`
	Email     openapi_types.Email `json:"email" mapstructure:"email"`
	FirstName string              `json:"first_name" mapstructure:"first_name"`
	LastName  string              `json:"last_name" mapstructure:"last_name"`
	MemberId  int64               `json:"member_id" mapstructure:"member_id"`
	UpdatedAt time.Time           `json:"updated_at" mapstructure:"updated_at"`
}

// MemberCreateRequest defines model for member_create_request.
type MemberCreateRequest struct {
	Email     openapi_types.Email `json:"email" mapstructure:"email"`
	FirstName string              `json:"first_name" mapstructure:"first_name"`
	LastName  string              `json:"last_name" mapstructure:"last_name"`
	Password  *string             `json:"password,omitempty" mapstructure:"password"`
}

// MemberCreateResponse defines model for member_create_response.
type MemberCreateResponse struct {
	Member Member `json:"member"`
}

// MemberCredentials defines model for member_credentials.
type MemberCredentials struct {
	MemberId int64  `json:"member_id" mapstructure:"member_id"`
	Password string `json:"password" mapstructure:"password"`
}

// MemberCredentialsCreateRequest defines model for member_credentials_create_request.
type MemberCredentialsCreateRequest struct {
	MemberId int64  `json:"member_id" mapstructure:"member_id"`
	Password string `json:"password" mapstructure:"password"`
}

// MemberCredentialsCreateResponse defines model for member_credentials_create_response.
type MemberCredentialsCreateResponse struct {
	MemberId int64  `json:"member_id" mapstructure:"member_id"`
	Password string `json:"password" mapstructure:"password"`
}

// MemberCredentialsDeleteRequest defines model for member_credentials_delete_request.
type MemberCredentialsDeleteRequest struct {
	MemberId int64 `json:"member_id" mapstructure:"member_id"`
}

// MemberCredentialsDeleteResponse defines model for member_credentials_delete_response.
type MemberCredentialsDeleteResponse struct {
	MemberId int64 `json:"member_id" mapstructure:"member_id"`
}

// MemberCredentialsRequest defines model for member_credentials_request.
type MemberCredentialsRequest struct {
	MemberId int64  `json:"member_id" mapstructure:"member_id"`
	Password string `json:"password" mapstructure:"password"`
}

// MemberCredentialsResponse defines model for member_credentials_response.
type MemberCredentialsResponse struct {
	MemberId int64  `json:"member_id" mapstructure:"member_id"`
	Password string `json:"password" mapstructure:"password"`
}

// MemberCredentialsUpdateRequest defines model for member_credentials_update_request.
type MemberCredentialsUpdateRequest struct {
	MemberId int64  `json:"member_id" mapstructure:"member_id"`
	Password string `json:"password" mapstructure:"password"`
}

// MemberCredentialsUpdateResponse defines model for member_credentials_update_response.
type MemberCredentialsUpdateResponse struct {
	MemberId int64  `json:"member_id" mapstructure:"member_id"`
	Password string `json:"password" mapstructure:"password"`
}

// MemberDeleteRequest defines model for member_delete_request.
type MemberDeleteRequest struct {
	MemberId int64 `json:"member_id" mapstructure:"member_id"`
}

// MemberDeleteResponse defines model for member_delete_response.
type MemberDeleteResponse struct {
	Message string `json:"message" mapstructure:"message"`
}

// MemberRequest defines model for member_request.
type MemberRequest struct {
	MemberId int64 `json:"member_id" mapstructure:"member_id"`
}

// MemberResponse defines model for member_response.
type MemberResponse struct {
	Member Member `json:"member"`
}

// MemberUpdateRequest defines model for member_update_request.
type MemberUpdateRequest struct {
	Email     openapi_types.Email `json:"email" mapstructure:"email"`
	FirstName string              `json:"first_name" mapstructure:"first_name"`
	LastName  string              `json:"last_name" mapstructure:"last_name"`
	MemberId  int64               `json:"member_id" mapstructure:"member_id"`
}

// MemberUpdateResponse defines model for member_update_response.
type MemberUpdateResponse struct {
	Member Member `json:"member"`
}

// MembersRequest defines model for members_request.
type MembersRequest struct {
	MemberIds []int64 `json:"member_ids" mapstructure:"member_ids"`
}

// MembersResponse defines model for members_response.
type MembersResponse struct {
	Members []Member `json:"members" mapstructure:"members"`
}

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xZ246bMBD9l2kfifJS9YGf6AdUFfLChLgF2x0P2o1W/Htl2OWShEtCuiQrv4Ftzpw5",
	"M7YH+xVinRutULGF8BVsvMdcVI+7IsuiHPMnJPdqSBskllh1xoSCMYkEV0M15e4JEsG4YZkjBMAHgxCC",
	"ZZIqhQBeNloYuYl1gimqDb4wiQ2LtMLLhbFMRcwFuY868GUZAOZCZj1DdcsyIzWGw99JshwpkaMbtgSz",
	"g+SAM3Ej3BbIwdZRiWTS00Qq/v6t1UQqxhTpQkMttDNUmOR/hrkDXzpzhH8LSZhA+LNDJGii3VG3q23Q",
	"zZce6V8NP/30G2MGF+w2ryNnEC2f5vcHKTzo8zRxa7SyeMr8aNp+JdxBCF+27Tzfvk3ybXfoMZVu3wQZ",
	"O0PG6k0y5naOoGXTIojE4VqB7YjCdo5XMzTuOzZb7UUO9syXI5E772SmU6lWT/0AjLD2WVOydG1scEbX",
	"kGbUmCRDASfcEdp9xPoPqqlA14NciC8YfcS8bg2ODA9Q1wU/1krWcB7S+x5J+1LIl0KfrBR6A64/GV5C",
	"fM71c667cTWSNI2nqjyTZPyhsgOETAXeanebTIXRLe849uNL8dQuNlBFjhSQrf0EFUuRWV+KnNdlcn56",
	"mfoyrVxV3LtOCWZ4B+l0RfF13o3HKyJ7fvhpPaWPn8+jAtVFns+juTL5dDrR6YG3hBnbgLUiXfwL8A5z",
	"hmXdMcLxEXVd7Y9gajnzf6OrnIBcfyYxJ9br5NonurmYvrS49L7iJlcVg7cUYxcUzbl534GmecnceT9u",
	"P3vefkrGjZNqpyFURZYFoA0qYSSEUO2svLd1T/kvAAD//wUbDzpJHwAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	pathPrefix := path.Dir(pathToFile)

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(pathPrefix, "auth.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

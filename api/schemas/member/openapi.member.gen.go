// Package member provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package member

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"
	"time"

	"github.com/getkin/kin-openapi/openapi3"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

// FullMember defines model for full_member.
type FullMember struct {
	CreatedAt time.Time           `json:"created_at" mapstructure:"created_at"`
	Email     openapi_types.Email `json:"email" mapstructure:"email"`
	FirstName string              `json:"first_name" mapstructure:"first_name"`
	LastName  string              `json:"last_name" mapstructure:"last_name"`
	MemberId  int64               `json:"member_id" mapstructure:"member_id"`
	UpdatedAt time.Time           `json:"updated_at" mapstructure:"updated_at"`
}

// FullMemberRequest defines model for full_member_request.
type FullMemberRequest struct {
	MemberId int64 `json:"member_id" mapstructure:"member_id"`
}

// FullMemberResponse defines model for full_member_response.
type FullMemberResponse struct {
	FullMember FullMember `json:"full_member"`
}

// FullMembersRequest defines model for full_members_request.
type FullMembersRequest struct {
	MemberIds []int64 `json:"member_ids" mapstructure:"member_ids"`
}

// FullMembersResponse defines model for full_members_response.
type FullMembersResponse struct {
	FullMembers []FullMember `json:"full_members" mapstructure:"full_members"`
}

// Member defines model for member.
type Member struct {
	CreatedAt time.Time           `json:"created_at" mapstructure:"created_at"`
	Email     openapi_types.Email `json:"email" mapstructure:"email"`
	FirstName string              `json:"first_name" mapstructure:"first_name"`
	LastName  string              `json:"last_name" mapstructure:"last_name"`
	MemberId  int64               `json:"member_id" mapstructure:"member_id"`
	UpdatedAt time.Time           `json:"updated_at" mapstructure:"updated_at"`
}

// MemberCreateRequest defines model for member_create_request.
type MemberCreateRequest struct {
	Email     openapi_types.Email `json:"email" mapstructure:"email"`
	FirstName string              `json:"first_name" mapstructure:"first_name"`
	LastName  string              `json:"last_name" mapstructure:"last_name"`
	Password  *string             `json:"password,omitempty" mapstructure:"password"`
}

// MemberCreateResponse defines model for member_create_response.
type MemberCreateResponse struct {
	Member Member `json:"member"`
}

// MemberDeleteRequest defines model for member_delete_request.
type MemberDeleteRequest struct {
	MemberId int64 `json:"member_id" mapstructure:"member_id"`
}

// MemberDeleteResponse defines model for member_delete_response.
type MemberDeleteResponse struct {
	Message string `json:"message" mapstructure:"message"`
}

// MemberRequest defines model for member_request.
type MemberRequest struct {
	MemberId int64 `json:"member_id" mapstructure:"member_id"`
}

// MemberResponse defines model for member_response.
type MemberResponse struct {
	Member Member `json:"member"`
}

// MemberUpdateRequest defines model for member_update_request.
type MemberUpdateRequest struct {
	Email     openapi_types.Email `json:"email" mapstructure:"email"`
	FirstName string              `json:"first_name" mapstructure:"first_name"`
	LastName  string              `json:"last_name" mapstructure:"last_name"`
	MemberId  int64               `json:"member_id" mapstructure:"member_id"`
}

// MemberUpdateResponse defines model for member_update_response.
type MemberUpdateResponse struct {
	Member Member `json:"member"`
}

// MembersRequest defines model for members_request.
type MembersRequest struct {
	MemberIds []int64 `json:"member_ids" mapstructure:"member_ids"`
}

// MembersResponse defines model for members_response.
type MembersResponse struct {
	Members []Member `json:"members" mapstructure:"members"`
}

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xW226cQAz9F7ePoH2p+sBP9AOqCk3AS6ZiLrWNklXEv1cDWxh2A8tm0yaNeIO5HNvH",
	"Z2w/QeGMdxatMGRPwMU9GtV97pu6zg2aO6Tw68l5JNHYbRaESrDMlXRHHZnwBaUSTEUbhATk4BEyYCFt",
	"K0jgMXXK67RwJVZoU3wUUqmoqsMzyrNQU0hD4VIE37YJoFG6nhjqV24z0mME/L0mltwqg+HYLZgRUgCu",
	"1SvhjkABts9KrssJJ9rK1y8jJ9oKVkhXGhqhg6HGl38zzRF8G8wR/mo0YQnZ98iRZMh2xG7MbRLrZeL0",
	"j8E/d/cTC4GQ7FHXeTCILOf6/kcMz8Z82XH2zjKee37ybD8T7iGDT7vxne+Oj3wXHz11Jd674AyvoLH7",
	"04KG1xDaDiuKSB1eSjAvMMxrolrB8TSw1WzfFODEfLuQueeD3Gr6VtM/WE0/AvdX5svRprmp5rxifnA0",
	"ldyweM7KA2nBb7Y+QCbU4HWmB9wzWVyUwnB1Te7niva6njjTDhc64dF+iTUuae89ThSnrs9Tx6yqm8X3",
	"B+YZL/uNBR//R17fTIt9tdzq4DvrvS/vhmty/TZa+0DD/+W5/9qR/1Wm/dlBf37GDye13TvIbFPXCTiP",
	"VnkNGXTNVO6532l/BwAA//888AIR/xEAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

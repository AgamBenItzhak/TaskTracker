// Package task provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package task

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"
	"time"

	"github.com/getkin/kin-openapi/openapi3"
)

// Task defines model for task.
type Task struct {
	CreatedAt   time.Time  `json:"created_at" mapstructure:"created_at"`
	Description *string    `json:"description,omitempty" mapstructure:"description"`
	EndDate     *time.Time `json:"end_date,omitempty" mapstructure:"end_date"`
	Priority    *string    `json:"priority,omitempty" mapstructure:"priority"`
	StartDate   *time.Time `json:"start_date,omitempty" mapstructure:"start_date"`
	Status      *string    `json:"status,omitempty" mapstructure:"status"`
	TaskGroupId int64      `json:"task_group_id" mapstructure:"task_group_id"`
	TaskId      int64      `json:"task_id" mapstructure:"task_id"`
	TaskName    string     `json:"task_name" mapstructure:"task_name"`
	UpdatedAt   time.Time  `json:"updated_at" mapstructure:"updated_at"`
}

// TaskCreateRequest defines model for task_create_request.
type TaskCreateRequest struct {
	Description *string    `json:"description,omitempty" mapstructure:"description"`
	EndDate     *time.Time `json:"end_date,omitempty" mapstructure:"end_date"`
	Priority    *string    `json:"priority,omitempty" mapstructure:"priority"`
	StartDate   *time.Time `json:"start_date,omitempty" mapstructure:"start_date"`
	Status      *string    `json:"status,omitempty" mapstructure:"status"`
	TaskGroupId int64      `json:"task_group_id" mapstructure:"task_group_id"`
	TaskName    string     `json:"task_name" mapstructure:"task_name"`
}

// TaskCreateResponse defines model for task_create_response.
type TaskCreateResponse struct {
	Task Task `json:"task"`
}

// TaskDeleteRequest defines model for task_delete_request.
type TaskDeleteRequest struct {
	TaskId int64 `json:"task_id" mapstructure:"task_id"`
}

// TaskDeleteResponse defines model for task_delete_response.
type TaskDeleteResponse struct {
	Message string `json:"message" mapstructure:"message"`
}

// TaskGroup defines model for task_group.
type TaskGroup struct {
	CreatedAt   time.Time  `json:"created_at" mapstructure:"created_at"`
	Description *string    `json:"description,omitempty" mapstructure:"description"`
	EndDate     *time.Time `json:"end_date,omitempty" mapstructure:"end_date"`
	GroupName   string     `json:"group_name" mapstructure:"group_name"`
	Priority    *string    `json:"priority,omitempty" mapstructure:"priority"`
	ProjectId   int64      `json:"project_id" mapstructure:"project_id"`
	StartDate   *time.Time `json:"start_date,omitempty" mapstructure:"start_date"`
	Status      *string    `json:"status,omitempty" mapstructure:"status"`
	TaskGroupId int64      `json:"task_group_id" mapstructure:"task_group_id"`
	UpdatedAt   time.Time  `json:"updated_at" mapstructure:"updated_at"`
}

// TaskGroupCreateRequest defines model for task_group_create_request.
type TaskGroupCreateRequest struct {
	Description *string    `json:"description,omitempty" mapstructure:"description"`
	EndDate     *time.Time `json:"end_date,omitempty" mapstructure:"end_date"`
	GroupName   string     `json:"group_name" mapstructure:"group_name"`
	Priority    *string    `json:"priority,omitempty" mapstructure:"priority"`
	ProjectId   int64      `json:"project_id" mapstructure:"project_id"`
	StartDate   *time.Time `json:"start_date,omitempty" mapstructure:"start_date"`
	Status      *string    `json:"status,omitempty" mapstructure:"status"`
}

// TaskGroupCreateResponse defines model for task_group_create_response.
type TaskGroupCreateResponse struct {
	TaskGroup TaskGroup `json:"task_group"`
}

// TaskGroupDeleteRequest defines model for task_group_delete_request.
type TaskGroupDeleteRequest struct {
	TaskGroupId int64 `json:"task_group_id" mapstructure:"task_group_id"`
}

// TaskGroupDeleteResponse defines model for task_group_delete_response.
type TaskGroupDeleteResponse struct {
	Message string `json:"message" mapstructure:"message"`
}

// TaskGroupMember defines model for task_group_member.
type TaskGroupMember struct {
	CreatedAt   time.Time `json:"created_at" mapstructure:"created_at"`
	MemberId    int64     `json:"member_id" mapstructure:"member_id"`
	Role        string    `json:"role" mapstructure:"role"`
	TaskGroupId int64     `json:"task_group_id" mapstructure:"task_group_id"`
	UpdatedAt   time.Time `json:"updated_at" mapstructure:"updated_at"`
}

// TaskGroupMemberCreateRequest defines model for task_group_member_create_request.
type TaskGroupMemberCreateRequest struct {
	MemberId    int64  `json:"member_id" mapstructure:"member_id"`
	Role        string `json:"role" mapstructure:"role"`
	TaskGroupId int64  `json:"task_group_id" mapstructure:"task_group_id"`
}

// TaskGroupMemberCreateResponse defines model for task_group_member_create_response.
type TaskGroupMemberCreateResponse struct {
	TaskGroupMember TaskGroupMember `json:"task_group_member"`
}

// TaskGroupMemberDeleteRequest defines model for task_group_member_delete_request.
type TaskGroupMemberDeleteRequest struct {
	MemberId    int64 `json:"member_id" mapstructure:"member_id"`
	TaskGroupId int64 `json:"task_group_id" mapstructure:"task_group_id"`
}

// TaskGroupMemberDeleteResponse defines model for task_group_member_delete_response.
type TaskGroupMemberDeleteResponse struct {
	Message string `json:"message" mapstructure:"message"`
}

// TaskGroupMemberRequest defines model for task_group_member_request.
type TaskGroupMemberRequest struct {
	MemberId    int64 `json:"member_id" mapstructure:"member_id"`
	TaskGroupId int64 `json:"task_group_id" mapstructure:"task_group_id"`
}

// TaskGroupMemberResponse defines model for task_group_member_response.
type TaskGroupMemberResponse struct {
	TaskGroupMember TaskGroupMember `json:"task_group_member"`
}

// TaskGroupMemberUpdateRequest defines model for task_group_member_update_request.
type TaskGroupMemberUpdateRequest struct {
	MemberId    int64   `json:"member_id" mapstructure:"member_id"`
	Role        *string `json:"role,omitempty" mapstructure:"role"`
	TaskGroupId int64   `json:"task_group_id" mapstructure:"task_group_id"`
}

// TaskGroupMemberUpdateResponse defines model for task_group_member_update_response.
type TaskGroupMemberUpdateResponse struct {
	TaskGroupMember TaskGroupMember `json:"task_group_member"`
}

// TaskGroupMembersRequest defines model for task_group_members_request.
type TaskGroupMembersRequest struct {
	TaskGroupId int64 `json:"task_group_id" mapstructure:"task_group_id"`
}

// TaskGroupMembersResponse defines model for task_group_members_response.
type TaskGroupMembersResponse struct {
	TaskGroupMembers []TaskGroupMember `json:"task_group_members" mapstructure:"task_group_members"`
}

// TaskGroupRequest defines model for task_group_request.
type TaskGroupRequest struct {
	TaskGroupId int64 `json:"task_group_id" mapstructure:"task_group_id"`
}

// TaskGroupResponse defines model for task_group_response.
type TaskGroupResponse struct {
	TaskGroup TaskGroup `json:"task_group"`
}

// TaskGroupUpdateRequest defines model for task_group_update_request.
type TaskGroupUpdateRequest struct {
	Description *string    `json:"description,omitempty" mapstructure:"description"`
	EndDate     *time.Time `json:"end_date,omitempty" mapstructure:"end_date"`
	GroupName   *string    `json:"group_name,omitempty" mapstructure:"group_name"`
	Priority    *string    `json:"priority,omitempty" mapstructure:"priority"`
	ProjectId   *int64     `json:"project_id,omitempty" mapstructure:"project_id"`
	StartDate   *time.Time `json:"start_date,omitempty" mapstructure:"start_date"`
	Status      *string    `json:"status,omitempty" mapstructure:"status"`
	TaskGroupId int64      `json:"task_group_id" mapstructure:"task_group_id"`
}

// TaskGroupUpdateResponse defines model for task_group_update_response.
type TaskGroupUpdateResponse struct {
	TaskGroup TaskGroup `json:"task_group"`
}

// TaskGroupsRequest defines model for task_groups_request.
type TaskGroupsRequest struct {
	TaskGroupIds []int64 `json:"task_group_ids" mapstructure:"task_group_ids"`
}

// TaskGroupsResponse defines model for task_groups_response.
type TaskGroupsResponse struct {
	TaskGroups []TaskGroup `json:"task_groups" mapstructure:"task_groups"`
}

// TaskMember defines model for task_member.
type TaskMember struct {
	CreatedAt time.Time `json:"created_at" mapstructure:"created_at"`
	MemberId  int64     `json:"member_id" mapstructure:"member_id"`
	Role      string    `json:"role" mapstructure:"role"`
	TaskId    int64     `json:"task_id" mapstructure:"task_id"`
	UpdatedAt time.Time `json:"updated_at" mapstructure:"updated_at"`
}

// TaskMemberCreateRequest defines model for task_member_create_request.
type TaskMemberCreateRequest struct {
	MemberId int64  `json:"member_id" mapstructure:"member_id"`
	Role     string `json:"role" mapstructure:"role"`
	TaskId   int64  `json:"task_id" mapstructure:"task_id"`
}

// TaskMemberCreateResponse defines model for task_member_create_response.
type TaskMemberCreateResponse struct {
	TaskMember TaskMember `json:"task_member"`
}

// TaskMemberDeleteRequest defines model for task_member_delete_request.
type TaskMemberDeleteRequest struct {
	MemberId int64 `json:"member_id" mapstructure:"member_id"`
	TaskId   int64 `json:"task_id" mapstructure:"task_id"`
}

// TaskMemberDeleteResponse defines model for task_member_delete_response.
type TaskMemberDeleteResponse struct {
	Message string `json:"message" mapstructure:"message"`
}

// TaskMemberRequest defines model for task_member_request.
type TaskMemberRequest struct {
	MemberId int64 `json:"member_id" mapstructure:"member_id"`
	TaskId   int64 `json:"task_id" mapstructure:"task_id"`
}

// TaskMemberResponse defines model for task_member_response.
type TaskMemberResponse struct {
	TaskMember TaskMember `json:"task_member"`
}

// TaskMemberUpdateRequest defines model for task_member_update_request.
type TaskMemberUpdateRequest struct {
	MemberId int64   `json:"member_id" mapstructure:"member_id"`
	Role     *string `json:"role,omitempty" mapstructure:"role"`
	TaskId   int64   `json:"task_id" mapstructure:"task_id"`
}

// TaskMemberUpdateResponse defines model for task_member_update_response.
type TaskMemberUpdateResponse struct {
	TaskMember TaskMember `json:"task_member"`
}

// TaskMembersRequest defines model for task_members_request.
type TaskMembersRequest struct {
	TaskId int64 `json:"task_id" mapstructure:"task_id"`
}

// TaskMembersResponse defines model for task_members_response.
type TaskMembersResponse struct {
	TaskMembers []TaskMember `json:"task_members" mapstructure:"task_members"`
}

// TaskRequest defines model for task_request.
type TaskRequest struct {
	TaskId int64 `json:"task_id" mapstructure:"task_id"`
}

// TaskResponse defines model for task_response.
type TaskResponse struct {
	Task Task `json:"task"`
}

// TaskUpdateRequest defines model for task_update_request.
type TaskUpdateRequest struct {
	Description *string    `json:"description,omitempty" mapstructure:"description"`
	EndDate     *time.Time `json:"end_date,omitempty" mapstructure:"end_date"`
	Priority    *string    `json:"priority,omitempty" mapstructure:"priority"`
	StartDate   *time.Time `json:"start_date,omitempty" mapstructure:"start_date"`
	Status      *string    `json:"status,omitempty" mapstructure:"status"`
	TaskGroupId *int64     `json:"task_group_id,omitempty" mapstructure:"task_group_id"`
	TaskId      int64      `json:"task_id" mapstructure:"task_id"`
	TaskName    *string    `json:"task_name,omitempty" mapstructure:"task_name"`
}

// TaskUpdateResponse defines model for task_update_response.
type TaskUpdateResponse struct {
	Task Task `json:"task"`
}

// TasksRequest defines model for tasks_request.
type TasksRequest struct {
	TaskIds []int64 `json:"task_ids" mapstructure:"task_ids"`
}

// TasksResponse defines model for tasks_response.
type TasksResponse struct {
	Tasks []Task `json:"tasks" mapstructure:"tasks"`
}

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xb224bIRD9F9pHW3mp+uBfqSqL7E4cWi9QmJUSRf73ir3ixLuwV2Obp7r27jAXzpzh",
	"iHyQRGRScOCoye6D6OQVMlp8RKr/mn+lEhIUMii+TRRQhHRP0fzvRajMfCIpRdgiy4BsCL5LIDuiUTF+",
	"IBvythVUsm0iUjgA38IbKrpFeijsZVRqVHmCuTIvWeZPpw1JQSeKSWSCFy5NsGybMqaBp3vj9SJhNMbN",
	"SlIxoRi+T42gsWOMaqQKlwvAMl+thrmeGkBlxRg0m2t/UCKXe5aeRcA4/vzRes84wgHUwJXOzTcLLraU",
	"vQinGUzNVGvImM1luiTmLPMns5yCfzlTkJLdrya6zxWzY93YqD3z9nfjmHj+AwmSOkflC3uzEmj82mUi",
	"7iPuZ8T93JC8BJKL0HADQEvBNXxFQM2+3xW8kB359tTy9FNF0k/FM5ec6V43hSP0AW+FNtnRYdwud6Uq",
	"A63pYXKBazNfPKx/6PSwKH0clWZomSWI5oCrZWmxXiyVMPtgEbxYtmPbH972rz0yWWxgVfJsg48Ym8q3",
	"H2J4ip3gHjvBJ6h0QcMXAH3DU8vKrhGqerIbxy5/vIaq9bpfbz/yDSXsYWufQfYM6tozV+nFIkVtTRcZ",
	"EsfJKS9sPDoZt2mtkjqahStLLjKOW2Rqx7pQtIGlcdOE1U/82KJ+ocf16gk/X10Usto2CrXyA9N4E/QV",
	"yz2x3DcB7ZJSIkOEtHGamoS/f/RdnCvaWLwzXnzLEDI9IveNN1Qp+j4+8NqVk7Oa2pWCeyhjMEduV1ON",
	"GljUwKIaPh3wA4hyDdz7kuE5d7jSOxtbmIX78609AnSnegw1zhZlb4g98UXJbuK0vfTtpSCuGc0h0N2/",
	"NHeVGxpDhLhBEtyAE1bf2cp1qgpSart6Jb3TFaykFpaYFnxBgwLjHYtjwW8Ev9l+1f2gb+pmoqeoNUrO",
	"mk/I6pewnOLVLRVk9eu0DyFDxXvs8e9XZr4s3wdiL1qaH8tu6lldVOqWk/qEJBcfDSOiGeLoCOJSBOY5",
	"xl8E2fH8eNwQIYFTyciOkA2RFF91+cvpfwAAAP//xdP1m7g4AAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

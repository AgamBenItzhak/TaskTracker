openapi: 3.0.2
info:
  title: TaskTracker API
  description: API for TaskTracker, a project management and task tracking system.
  version: 0.1.0
servers:
  - url: http://localhost:8080/api
paths:
  /users/register:
    post:
      summary: Register a new user
      description: Register a new user with the system.
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../schema.yaml#/components/schemas/user'
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '../schema.yaml#/components/schemas/user'
        '400':
          description: Invalid input
  /users/login:
    post:
      summary: Login a user
      description: Login a user to the system.
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: User logged in
          content:
            application/json:
              schema:
                $ref: '../schema.yaml#/components/schemas/user'
        '400':
          description: Invalid input
  /users/logout:
    post:
      summary: Logout a user
      description: Logout a user from the system.
      tags:
        - users
      responses:
        '204':
          description: User logged out
  /users/{user_id}:
    get:
      summary: Get user by ID
      description: Get a user by their ID.
      tags:
        - users
      parameters:
        - name: user_id
          in: path
          required: true
          description: ID of the user to get
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '../schema.yaml#/components/schemas/user'
        '404':
          description: User not found
    put:
      summary: Update user by ID
      description: Update a user by their ID.
      tags:
        - users
      parameters:
        - name: user_id
          in: path
          required: true
          description: ID of the user to update
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../schema.yaml#/components/schemas/user'
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                $ref: '../schema.yaml#/components/schemas/user'
        '404':
          description: User not found
    delete:
      summary: Delete user by ID
      description: Delete a user by their ID.
      tags:
        - users
      parameters:
        - name: user_id
          in: path
          required: true
          description: ID of the user to delete
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: User deleted
        '404':
          description: User not found
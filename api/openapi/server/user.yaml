openapi: 3.0.2
info:
  title: TaskTracker API
  description: API for TaskTracker, a project management and task tracking system.
  version: 0.1.0
servers:
  - url: http://localhost:8080/api
paths:
  /user:
    get:
      summary: Get all users
      operationId: getAllUsers
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '../schemas/user.yaml#/components/schemas/user'
    post:
      summary: Create a new user
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../schemas/user.yaml#/components/schemas/user'
      responses:
        '201':
          description: The newly created user
          content:
            application/json:
              schema:
                $ref: '../schemas/user.yaml#/components/schemas/user'
  /user/{user_id}:
    get:
      summary: Get a user by ID
      operationId: getUserByID
      parameters:
        - name: user_id
          in: path
          required: true
          description: The ID of the user to get
          schema:
            type: integer
      responses:
        '200':
          description: The user with the specified ID
          content:
            application/json:
              schema:
                $ref: '../schemas/user.yaml#/components/schemas/user'
    put:
      summary: Update a user by ID
      operationId: updateUserByID
      parameters:
        - name: user_id
          in: path
          required: true
          description: The ID of the user to update
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../schemas/user.yaml#/components/schemas/user'
      responses:
        '200':
          description: The updated user
          content:
            application/json:
              schema:
                $ref: '../schemas/user.yaml#/components/schemas/user'
    delete:
      summary: Delete a user by ID
      operationId: deleteUserByID
      parameters:
        - name: user_id
          in: path
          required: true
          description: The ID of the user to delete
          schema:
            type: integer
      responses:
        '204':
          description: User deleted successfully
    patch:
      summary: Update a user's credentials by ID
      operationId: updateUserCredentialsByID
      parameters:
        - name: user_id
          in: path
          required: true
          description: The ID of the user to update
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../schemas/user.yaml#/components/schemas/user_credentials_update_request'
      responses:
        '200':
          description: The updated user
          content:
            application/json:
              schema:
                $ref: '../schemas/user.yaml#/components/schemas/user'
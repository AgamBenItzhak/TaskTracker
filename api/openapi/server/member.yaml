openapi: 3.0.2
info:
  title: TaskTracker API
  description: API for TaskTracker, a project management and task tracking system.
  version: 0.1.0
servers:
  - url: http://localhost:8080/api
paths:
  /member:
    get:
      summary: Get all members
      operationId: GetAllMembers
      responses:
        '200':
          description: A list of members
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '../schemas/member.yaml#/components/schemas/member_response'
    post:
      summary: Create a new member
      operationId: CreateMember
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../schemas/member.yaml#/components/schemas/member_create_request'
      responses:
        '201':
          description: The newly created member
          content:
            application/json:
              schema:
                $ref: '../schemas/member.yaml#/components/schemas/member_create_response'
  /member/{member_id}:
    get:
      summary: Get a member by ID
      operationId: GetMemberByID
      parameters:
        - name: member_id
          in: path
          required: true
          description: The ID of the member to get
          schema:
            type: integer
      responses:
        '200':
          description: The member with the specified ID
          content:
            application/json:
              schema:
                $ref: '../schemas/member.yaml#/components/schemas/member_response'
    put:
      summary: Update a member by ID
      operationId: UpdateMemberByID
      parameters:
        - name: member_id
          in: path
          required: true
          description: The ID of the member to update
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../schemas/member.yaml#/components/schemas/member_update_request'
      responses:
        '200':
          description: The updated member
          content:
            application/json:
              schema:
                $ref: '../schemas/member.yaml#/components/schemas/member_update_response'
    delete:
      summary: Delete a member by ID
      operationId: DeleteMemberByID
      parameters:
        - name: member_id
          in: path
          required: true
          description: The ID of the member to delete
          schema:
            type: integer
      responses:
        '204':
          description: member deleted successfully
  /member/{member_id}/Credentials:
    get:
      summary: Get a member's credentials by ID
      operationId: GetMemberCredentialsByID
      parameters:
        - name: member_id
          in: path
          required: true
          description: The ID of the member to get credentials for
          schema:
            type: integer
      responses:
        '200':
          description: The member's credentials with the specified ID
          content:
            application/json:
              schema:
                $ref: '../schemas/member.yaml#/components/schemas/member_credentials_response'
    put:
      summary: Update a member's credentials by ID
      operationId: UpdateMemberCredentialsByID
      parameters:
        - name: member_id
          in: path
          required: true
          description: The ID of the member to update credentials for
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../schemas/member.yaml#/components/schemas/member_credentials_update_request'
      responses:
        '200':
          description: The updated member's credentials
          content:
            application/json:
              schema:
                $ref: '../schemas/member.yaml#/components/schemas/member_credentials_response'
    delete:
      summary: Delete a member's credentials by ID
      operationId: DeleteMemberCredentialsByID
      parameters:
        - name: member_id
          in: path
          required: true
          description: The ID of the member to delete credentials for
          schema:
            type: integer
      responses:
        '204':
          description: member credentials deleted successfully
  /member/login:
    post:
      summary: Log in a member
      operationId: LoginMember
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../schemas/member.yaml#/components/schemas/login_request'
      responses:
        '200':
          description: The member's token
          content:
            application/json:
              schema:
                $ref: '../schemas/member.yaml#/components/schemas/login_response'
  /member/logout:
    post:
      summary: Log out a member
      operationId: LogoutMember
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../schemas/member.yaml#/components/schemas/logout_request'
      responses:
        '204':
          description: The member has been logged out
          content:
            application/json:
              schema:
                $ref: '../schemas/member.yaml#/components/schemas/logout_response'